---
interface Props {
  isFlipped: boolean;
  isDrawn: boolean;
}

const { isFlipped, isDrawn } = Astro.props;
---

<div class={`card ${isFlipped ? 'flipped' : ''} ${isDrawn ? 'drawn' : ''}`}>
  <div class="card-inner">
    <div class="card-front">
      <div class="card-pattern"></div>
    </div>
    <div class="card-back">
      <div class="back-content">
        <p class="challenge-intro">El reto te espera...</p>
        <p class="challenge-question">Â¿te atreves?</p>
        <div class="challenge-text">
          <slot />
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .card {
    width: 300px;
    height: 400px;
    perspective: 1000px;
    cursor: pointer;
    margin: 20px auto;
    position: absolute;
    left: -350px;
    opacity: 0;
    transition: all 0.5s ease-out;
  }

  .card.drawn {
    left: 0;
    opacity: 1;
  }

  .card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.8s;
    transform-style: preserve-3d;
  }

  .card.flipped .card-inner {
    transform: rotateY(180deg);
  }

  .card-front,
  .card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    border-radius: 15px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }

  .card-front {
    background: #1a1a1a;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .card-pattern {
    width: 80%;
    height: 80%;
    border: 2px solid #333;
    border-radius: 10px;
    background-image: linear-gradient(45deg, #222 25%, transparent 25%),
                    linear-gradient(-45deg, #222 25%, transparent 25%),
                    linear-gradient(45deg, transparent 75%, #222 75%),
                    linear-gradient(-45deg, transparent 75%, #222 75%);
    background-size: 20px 20px;
    background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
  }

  .card-back {
    background: linear-gradient(135deg, #fff 0%, #f0f0f0 100%);
    transform: rotateY(180deg);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
    color: #333;
  }

  .back-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    width: 100%;
  }

  .challenge-intro {
    font-size: 1.8em;
    font-weight: bold;
    margin: 0;
    background: linear-gradient(45deg, rgb(var(--accent)), rgb(var(--accent-light)));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
  }

  .challenge-question {
    font-size: 2.2em;
    font-weight: 800;
    margin: 10px 0 30px;
    color: rgb(var(--accent-dark));
    text-transform: uppercase;
    letter-spacing: 2px;
    transform: scale(1.2);
  }

  .challenge-text {
    font-size: 1.2em;
    line-height: 1.4;
    padding: 20px;
    border-radius: 10px;
    background: rgba(var(--accent-light), 0.1);
    margin-top: 20px;
    width: 90%;
  }
</style>